# This script may be run from the command line by typing
# rb make_anc_state.Rev

# After opening a new RevBayes session, create helper variables for files we'll work with.

out_str = "output/epoch"
out_state_fn = out_str + ".states.log"
out_tree_fn   = out_str + ".tre"
out_mcc_fn   = out_str + ".mcc.tre"

# Build a maximum clade credibility (MCC) tree from the posterior tree distribution, discarding the first 25% samples.
# This step is not needed when we assume a fixed phylogeny.

tree_trace = readTreeTrace(file=out_tree_fn, treetype="clock")
tree_trace.setBurnin(0.25)
n_burn = tree_trace.getBurnin()

# Compute and save the maximum clade credibility tree
mcc_tree = mccTree(tree_trace, file=out_mcc_fn)

# Get the ancestral state trace from epoch.states.log
state_trace = readAncestralStateTrace(file=out_state_fn)

# Get the ancestral state tree trace from epoch.tre
tree_trace = readAncestralStateTreeTrace(file=out_tree_fn, treetype="clock")


# Finally, compute and save the ancestral state tree as simple.ase.tre.
anc_tree = ancestralStateTree(tree=mcc_tree,
                              ancestral_state_trace_vector=state_trace,
                              tree_trace=tree_trace,
                              include_start_states=true,
                              file=out_str+".ase.tre",
                              burnin=n_burn,
                              site=1)

# exit RevBayes
quit()
                             
